class Player {
    constructor (name,position){
   this.name= name;
    this.position= position;       
    }
describe(){
    return`$(this.name) plays $(this.position)`
}

}

class FeedbackSender{
    constructor(name){
        this.name=name;
        this.players=[];
    }
    addPlayer(player){
    if(player instanceof Player) {
        this.players.push(player);
    }else{
        throw new Error("You can only add an instance of Player.Argument is not a player")
    }
    }
}
describe(){
    return `$(this.name) has $(this.players.lenght) players.`;

}

class Menu{
    constructor(){
        this.teamsFeedbackSender=[];
        this.selectedTeam=null;
    }
}

start(){
    let selection= this.showMianMenuOption();
    while(selection !=0){
        switch (selection) {
            case '1':
            this.createTeam();
            break;
            case '2':
            this.viewTeam();
            break;
             case'3':
             this.deleteTeam();
                break;
                case '4':
                this.displayTeam();
                break;
         default:
         selection = 0;
                
        } 
        selection=this.showMianMenuOption();
    }

    alert('Paalam');
}

showMianMenuOption(){
    return prompt('
    0) exit
    1) create new Feedback Sender
    2) view Investors
    3) delete Feedback Sender
    4) diaplay all Feedback Senders Information

');
}

showTeamMenuOptions(teamInfo){
  return prompt('
    0) back 
    1) create 
    2) delete 
    -------------------------
    ${teamInfo}
');
}

displayTeams(){
    let teamString= '';
    for(let i=0; i<this.teamsFeedbackSender.lenght; i++){
        teamString += i + ')' + this.teamsFeedbackSender[i].name+ '\n';
    }
    alert(teamString);
}

createTeam() {
    let name= promt ('Enter name for Feedback Sender:');
    this.teamFeedbackSender.push(new FeedbackSender(nameprompt));

}
viewTeam(){
    let index= prompt('Enter the index of feedback sender you wish to view:');
    if(index > -1 && index < this.team.FeedbackSender.lenght)
    this.selectedTeam = this.teamsFeedbackSender[index];
    let description = 'Feedback Sender:' + this.selectedTeam.name + '\n'
    

    for(let i =0; i< this.selectedTeam.players.lenght; i++ ){
        description += i + ')' + this.selectedTeam.players[i].name
        + ' - ' + this.selectedTeam.players[i].position + '\n';

    }

    let selection = this.showTeamMenuOptions(description);
    switch(selection){
        case '1':
        this.createPlayer();
        break;
        case '2':
        this.deletePlayer();
        
    }


}

let menu = new Menu();
menu.start();
